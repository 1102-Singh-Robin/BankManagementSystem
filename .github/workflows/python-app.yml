name: Python Windows Build and Release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || echo "No requirements"
        pip install coverage pyinstaller

    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover tests
        coverage report > coverage.txt

    - name: Clean previous build
      run: |
        Remove-Item -Recurse -Force build, dist, __pycache__ -ErrorAction SilentlyContinue
        Remove-Item -Force main.spec -ErrorAction SilentlyContinue
        Write-Output "Cleaned"

    - name: Build Windows .exe with PyInstaller
      run: pyinstaller --onefile main.py

    - name: Create GitHub Release
      id: create_release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Windows .exe to GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/main.exe
        asset_name: main.exe
        asset_content_type: application/octet-stream
